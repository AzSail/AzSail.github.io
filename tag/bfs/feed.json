{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"bfs\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/01/05/BFS%E6%A8%A1%E6%9D%BF/",
            "url": "http://example.com/2023/01/05/BFS%E6%A8%A1%E6%9D%BF/",
            "title": "BFS模板",
            "date_published": "2023-01-05T09:40:00.000Z",
            "content_html": "<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><p>字符 E 表示奶酪所在的位置，字符 # 表示墙壁，字符 . 表示可以通行，</p>\n<p>对于每一组数据，输出吃到奶酪的最少单位时间。</p>\n<p>若无法吃到奶酪，则输出“oop!”（只输出引号里面的内容，不输出引号）。</p>\n<p>在 1 个单位时间内可以从当前的位置走到它上下左右四个方向上的任意一个位置，但不能走出地图边界。</p>\n<h4 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h4><h6 id=\"二维\"><a href=\"#二维\" class=\"headerlink\" title=\"二维\"></a>二维</h6><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">210</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方向偏移量</span></span><br><span class=\"line\"><span class=\"type\">int</span> dx[<span class=\"number\">4</span>] = &#123;<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> dy[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 距离</span></span><br><span class=\"line\"><span class=\"type\">int</span> dist[N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; start;</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; ed;</span><br><span class=\"line\"><span class=\"comment\">// 迷宫</span></span><br><span class=\"line\"><span class=\"type\">char</span> g[N][N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bfs</span><span class=\"params\">(pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; s, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; e)</span></span>&#123;</span><br><span class=\"line\">\tqueue&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dist, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdist[s.first][s.second] = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">// 起点</span></span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">\t\tpair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; t = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(t == e) <span class=\"keyword\">return</span> dist[t.first][t.second];\t\t\t<span class=\"comment\">// 判断是否终点</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x = t.first + dx[i];</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> y = t.second + dy[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x &lt; <span class=\"number\">0</span> || y &lt; <span class=\"number\">0</span> || x &gt;= n || y &gt;= m) <span class=\"keyword\">continue</span>;\t<span class=\"comment\">// 越界</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(g[x][y] == <span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">continue</span>;\t\t\t\t<span class=\"comment\">// 碰墙</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dist[x][y] != <span class=\"number\">-1</span>) <span class=\"keyword\">continue</span>;\t\t\t\t<span class=\"comment\">// 已遍历</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tdist[x][y] = dist[t.first][t.second] + <span class=\"number\">1</span>;\t\t<span class=\"comment\">// 距离加一</span></span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x, y&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> t;</span><br><span class=\"line\">\tcin &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, g[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(g[i][j] == <span class=\"string\">&#x27;S&#x27;</span>) start = &#123;i, j&#125;;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(g[i][j] == <span class=\"string\">&#x27;E&#x27;</span>) ed = &#123;i, j&#125;;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> d = <span class=\"built_in\">bfs</span>(start, ed);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(d == <span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;oop!\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, d);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"三维\"><a href=\"#三维\" class=\"headerlink\" title=\"三维\"></a>三维</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">101</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; start, ed, tmp;</span><br><span class=\"line\"><span class=\"type\">char</span> g[N][N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> st[N][N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> dy[<span class=\"number\">4</span>] = &#123;<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> dz[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> l, r, c;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bfs</span><span class=\"params\">(pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; s, pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; e)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(st, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span> st);</span><br><span class=\"line\">\tqueue&lt;pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;&gt; q;</span><br><span class=\"line\">\tst[s.first][s.second.first][s.second.second] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">\t\ttmp = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tmp == e) <span class=\"keyword\">return</span> st[tmp.first][tmp.second.first][tmp.second.second];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x = tmp.first, y, z;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x + <span class=\"number\">1</span> &lt; l &amp;&amp; st[x + <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] == <span class=\"number\">-1</span> &amp;&amp; g[x + <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] != <span class=\"string\">&#x27;#&#x27;</span>)&#123;</span><br><span class=\"line\">\t\t\tst[x + <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] = st[tmp.first][tmp.second.first][tmp.second.second] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x + <span class=\"number\">1</span>, &#123;tmp.second.first, tmp.second.second&#125;&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x - <span class=\"number\">1</span> &gt;= <span class=\"number\">0</span> &amp;&amp; st[x - <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] == <span class=\"number\">-1</span> &amp;&amp; g[x - <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] != <span class=\"string\">&#x27;#&#x27;</span>)&#123;</span><br><span class=\"line\">\t\t\tst[x - <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] = st[tmp.first][tmp.second.first][tmp.second.second] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x - <span class=\"number\">1</span>, &#123;tmp.second.first, tmp.second.second&#125;&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)&#123;</span><br><span class=\"line\">\t\t\ty = tmp.second.first + dy[i];</span><br><span class=\"line\">\t\t\tz = tmp.second.second + dz[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(st[x][y][z] != <span class=\"number\">-1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(y &lt; <span class=\"number\">0</span> || z &lt; <span class=\"number\">0</span> || y &gt;= r || z &gt;= c) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(g[x][y][z] == <span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\tst[x][y][z] = st[tmp.first][tmp.second.first][tmp.second.second] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x, &#123;y, z&#125;&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(l == <span class=\"number\">0</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; l; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; r; j++) </span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, g[i][j]);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; l; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; r; j++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> z = <span class=\"number\">0</span>; z &lt; c; z++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(g[i][j][z] == <span class=\"string\">&#x27;S&#x27;</span>) start = &#123;i, &#123;j, z&#125;&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(g[i][j][z] == <span class=\"string\">&#x27;E&#x27;</span>) ed = &#123;i, &#123;j, z&#125;&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> step = <span class=\"built_in\">bfs</span>(start, ed);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(step == <span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Trapped!\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Escaped in %d minute(s).\\n&quot;</span>, step);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "BFS"
            ]
        }
    ]
}