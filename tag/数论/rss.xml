<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>mioe • Posts by &#34;数论&#34; tag</title>
        <link>http://example.com</link>
        <description>花店不开了，花继续开</description>
        <language>zh-CN</language>
        <pubDate>Tue, 10 Jan 2023 16:04:00 +0800</pubDate>
        <lastBuildDate>Tue, 10 Jan 2023 16:04:00 +0800</lastBuildDate>
        <category>BFS</category>
        <category>算法</category>
        <category>Resilio Sync</category>
        <category>unity</category>
        <category>WolfraAlpha</category>
        <category>数论</category>
        <category>github</category>
        <category>linux</category>
        <category>Open-cv</category>
        <category>碧蓝航线</category>
        <category>Python</category>
        <category>模板</category>
        <category>局域网</category>
        <category>阅读</category>
        <category>相册</category>
        <category>算法模板</category>
        <item>
            <guid isPermalink="true">http://example.com/2023/01/10/gcd%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%A8%A1%E6%9D%BF/</guid>
            <title>gcd与欧拉质数筛模板</title>
            <link>http://example.com/2023/01/10/gcd%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%A8%A1%E6%9D%BF/</link>
            <category>数论</category>
            <pubDate>Tue, 10 Jan 2023 16:04:00 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;欧几里得辗转相除法&#34;&gt;&lt;a href=&#34;#欧几里得辗转相除法&#34; class=&#34;headerlink&#34; title=&#34;欧几里得辗转相除法&#34;&gt;&lt;/a&gt;欧几里得辗转相除法&lt;/h2&gt;&lt;p&gt;$gcd(a, b)&amp;#x3D;gcd(b,a\ mod\ b)&amp;#x3D;···&amp;#x3D;gcd(n,0)$&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;c++&#34;&gt;int gcd(int a, int b)&amp;#123;
    return b ? gcd(b, a % b) : a;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;欧拉质数筛&#34;&gt;&lt;a href=&#34;#欧拉质数筛&#34; class=&#34;headerlink&#34; title=&#34;欧拉质数筛&#34;&gt;&lt;/a&gt;欧拉质数筛&lt;/h2&gt;&lt;h4 id=&#34;时间复杂度-O-n&#34;&gt;&lt;a href=&#34;#时间复杂度-O-n&#34; class=&#34;headerlink&#34; title=&#34;时间复杂度$O(n)$&#34;&gt;&lt;/a&gt;时间复杂度$O(n)$&lt;/h4&gt;&lt;pre&gt;&lt;code class=&#34;c++&#34;&gt;const int N = 1e8 + 10;
int p[N], cnt;
bool st[N];
void get_primes(int n)&amp;#123;
    for(int i = 2; i &amp;lt;= n; i++)&amp;#123;
        if(!st[i]) p[cnt++] = i;
        for(int j = 0; i * p[i] &amp;lt;= n; j++)&amp;#123;
            st[p[j] * i] = true;
            if(i % p[j] == 0) break;
        &amp;#125;
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
    </channel>
</rss>
