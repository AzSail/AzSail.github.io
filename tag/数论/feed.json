{
    "version": "https://jsonfeed.org/version/1",
    "title": "mioe • All posts by \"数论\" tag",
    "description": "花店不开了，花继续开",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/01/10/gcd%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%A8%A1%E6%9D%BF/",
            "url": "http://example.com/2023/01/10/gcd%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%A8%A1%E6%9D%BF/",
            "title": "gcd与欧拉质数筛模板",
            "date_published": "2023-01-10T08:04:00.000Z",
            "content_html": "<h2 id=\"欧几里得辗转相除法\"><a href=\"#欧几里得辗转相除法\" class=\"headerlink\" title=\"欧几里得辗转相除法\"></a>欧几里得辗转相除法</h2><p>$gcd(a, b)&#x3D;gcd(b,a\\ mod\\ b)&#x3D;···&#x3D;gcd(n,0)$</p>\n<pre><code class=\"c++\">int gcd(int a, int b)&#123;\n    return b ? gcd(b, a % b) : a;\n&#125;\n</code></pre>\n<h2 id=\"欧拉质数筛\"><a href=\"#欧拉质数筛\" class=\"headerlink\" title=\"欧拉质数筛\"></a>欧拉质数筛</h2><h4 id=\"时间复杂度-O-n\"><a href=\"#时间复杂度-O-n\" class=\"headerlink\" title=\"时间复杂度$O(n)$\"></a>时间复杂度$O(n)$</h4><pre><code class=\"c++\">const int N = 1e8 + 10;\nint p[N], cnt;\nbool st[N];\nvoid get_primes(int n)&#123;\n    for(int i = 2; i &lt;= n; i++)&#123;\n        if(!st[i]) p[cnt++] = i;\n        for(int j = 0; i * p[i] &lt;= n; j++)&#123;\n            st[p[j] * i] = true;\n            if(i % p[j] == 0) break;\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n",
            "tags": [
                "数论"
            ]
        }
    ]
}