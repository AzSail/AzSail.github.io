{
    "version": "https://jsonfeed.org/version/1",
    "title": "書架 • All posts by \"opencv\" category",
    "description": "花店不开了，花继续开",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/04/%E5%9B%BE%E5%83%8F%E7%9A%84%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%BF%90%E7%AE%97%EF%BC%88%E5%AF%B9%E6%95%B0%EF%BC%89/",
            "url": "http://example.com/2022/10/04/%E5%9B%BE%E5%83%8F%E7%9A%84%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%BF%90%E7%AE%97%EF%BC%88%E5%AF%B9%E6%95%B0%EF%BC%89/",
            "title": "图像的非线性运算（对数）",
            "date_published": "2022-10-04T07:58:00.000Z",
            "content_html": "<h2 id=\"公式\"><a href=\"#公式\" class=\"headerlink\" title=\"公式\"></a>公式</h2><p>$$<br>g[i][j] &#x3D; clog_{10}(f[i][j])</p>\n<p>$$</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><pre><code class=\"python\">import cv2,math,skimage\nfrom matplotlib import pyplot as plt\nfrom copy import copy\n\ndef change(img, w, l, channel):\n    if channel == 3:\n        img = skimage.img_as_float(img)\n        for i in range(w):\n            for j in range(l): \n                for k in range(channel):\n                    img[i][j][k] = 2 * math.log((1 + img[i][j][k]), 10)\n    elif channel == 2:\n        for i in range(w):\n            for j in range(l): \n                img[i][j] = 20 * math.log((1 + img[i][j]), 10)\n    return img\n\n\ncat = cv2.imread(&quot;D:\\\\work\\\\cv\\\\1002\\\\cat.jpg&quot;)\ncat = cv2.cvtColor(cat, cv2.COLOR_BGR2GRAY)\n\nchange_cat = cat.copy()\n# print(change_cat.ndim)\nchange_cat = change(change_cat, change_cat.shape[0], change_cat.shape[1], change_cat.ndim)\n\nif change_cat.ndim == 3:\n    plt.rcParams[&#39;font.family&#39;] = &#39;SimHei&#39; \n    plt.figure(figsize=(10, 8), dpi = 100)\n    plt.subplot(121),plt.imshow(cat[:,:,::-1]),plt.title(&#39;原图&#39;)\n    plt.subplot(122),plt.imshow(change_cat[:,:,::-1]),plt.title(&#39;调整后&#39;)\n    plt.show()\nelif change_cat.ndim == 2:\n    plt.rcParams[&#39;font.family&#39;] = &#39;SimHei&#39; \n    plt.figure(figsize=(10, 8), dpi = 100)\n    plt.subplot(121),plt.imshow(cat, cmap=&#39;gray&#39;),plt.title(&#39;原图&#39;)\n    plt.subplot(122),plt.imshow(change_cat, cmap=&#39;gray&#39;),plt.title(&#39;调整后&#39;)\n    plt.show()\n</code></pre>\n<h3 id=\"输出：\"><a href=\"#输出：\" class=\"headerlink\" title=\"输出：\"></a>输出：</h3><p><img data-src=\"https://mioe-xyz.oss-cn-shanghai.aliyuncs.com/usr/uploads/2022/10/2526917559.png\" alt=\"image.png\"></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2022/09/27/%E4%BC%BD%E9%A9%AC%E6%A0%A1%E6%AD%A3%E8%A1%A5%E5%81%BF/",
            "url": "http://example.com/2022/09/27/%E4%BC%BD%E9%A9%AC%E6%A0%A1%E6%AD%A3%E8%A1%A5%E5%81%BF/",
            "title": "伽马校正补偿",
            "date_published": "2022-09-27T08:33:00.000Z",
            "content_html": "<h2 id=\"伽玛校正\"><a href=\"#伽玛校正\" class=\"headerlink\" title=\"伽玛校正\"></a>伽玛校正</h2><pre><code>所谓伽玛校正就是对图像的伽玛曲线进行编辑，以对图像进行非线性色调编辑的方法，检出图像信号中的深色部分和浅色部分，并使两者比例增大，从而提高图像对比度效果。计算机绘图领域惯以此屏幕输出电压与对应亮度的转换关系曲线，称为伽玛曲线（Gamma Curve）。\n</code></pre>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200626102704679.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"gamma-补偿的作用\"><a href=\"#gamma-补偿的作用\" class=\"headerlink\" title=\"gamma 补偿的作用\"></a>gamma 补偿的作用</h2><p>gamma 补偿可以增加图片像素低的部分的对比度，减小图片像素高的部分的对比度。</p>\n<p>也就是图片黑的地方可以看得更清晰，图片亮的地方会变得更模糊。</p>\n<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><pre><code class=\"python\">import cv2,skimage\nimport matplotlib.pyplot as plt\n\ndef Gamma(img, gamma):\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\t\t# 转灰度图\n    img = skimage.img_as_float(img)\t\t\t# 转浮点\n    return pow(img, gamma)\n\ncat = cv2.imread(&quot;cat.jpg&quot;)\n\nplt.rcParams[&#39;font.family&#39;] = &#39;SimHei&#39;\t\t\t# 设置字体微软雅黑\nplt.figure(figsize = (10, 8),dpi = 100)\nfor i in range(0, 8):\n    plt.subplot(int(241 + i))\n    plt.imshow(Gamma(cat, i / 4), cmap=&#39;gray&#39;)\n    plt.title(&#39;gamma:&#39;+str(i / 4))\nplt.show()\n\ncv2.waitKey()\n</code></pre>\n<h3 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h3><p><img data-src=\"https://mioe-xyz.oss-cn-shanghai.aliyuncs.com/usr/uploads/2022/10/956158489.png\" alt=\"image.png\"></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2022/09/25/%E5%9B%BE%E7%89%87%E8%AE%A1%E7%AE%97/",
            "url": "http://example.com/2022/09/25/%E5%9B%BE%E7%89%87%E8%AE%A1%E7%AE%97/",
            "title": "图片计算",
            "date_published": "2022-09-25T09:34:00.000Z",
            "content_html": "<h3 id=\"直接加运算\"><a href=\"#直接加运算\" class=\"headerlink\" title=\"直接加运算\"></a>直接加运算</h3><p><code>img += 10</code> 每项rgb数值都加10，溢出部分会自动<code>% 255</code>处理</p>\n<h3 id=\"cv2-add\"><a href=\"#cv2-add\" class=\"headerlink\" title=\"cv2.add\"></a><code>cv2.add</code></h3><p><code>cv2.add(img, img1)</code>溢出部分将自动处理为255</p>\n<h3 id=\"cv2-addaddWeighted\"><a href=\"#cv2-addaddWeighted\" class=\"headerlink\" title=\"cv2.addaddWeighted\"></a><code>cv2.addaddWeighted</code></h3><p><code>cv2.addWeighted(src1, alpha, src2, beta, gamma[, dst[, dtype]]) → dst</code></p>\n<ul>\n<li><p>scr1, scr2：ndarray 多维数组，表示一个灰度或彩色图像</p>\n</li>\n<li><p>alpha：第一张图像 scr1 的权重，通常取为 0～1 之间的浮点数</p>\n</li>\n<li><p>beta：第二张图像 scr2 的权重，通常取为 0～1 之间的浮点数</p>\n</li>\n<li><p>gamma： 灰度系数，图像校正的偏移量，用于调节亮度</p>\n</li>\n<li><p>dtype 输出图像的深度，即每个像素值的位数，可选项，默认等于 src1.depth()</p>\n</li>\n<li><p>retrun：dst，加权加法运算结果的图像数组</p>\n<p><img data-src=\"https://mioe-xyz.oss-cn-shanghai.aliyuncs.com/usr/uploads/2022/09/3016520072.png\" alt=\"image.png\"></p>\n</li>\n</ul>\n",
            "tags": [
                "Open-cv"
            ]
        },
        {
            "id": "http://example.com/2022/09/24/%E5%9B%BE%E5%83%8F%E5%A1%AB%E5%85%85/",
            "url": "http://example.com/2022/09/24/%E5%9B%BE%E5%83%8F%E5%A1%AB%E5%85%85/",
            "title": "图像填充",
            "date_published": "2022-09-24T05:15:00.000Z",
            "content_html": "<h1 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h1><p><code>cv2.copyMakeBorder(src, top, bottom, left, right, borderType, value)</code></p>\n<ul>\n<li>borderType：填充类型</li>\n<li>value：可选参数</li>\n</ul>\n<h2 id=\"borderType\"><a href=\"#borderType\" class=\"headerlink\" title=\"borderType\"></a>borderType</h2><ul>\n<li><code>cv2.BORDER_REPLICATE</code></li>\n<li><code>cv2.BORDER_REFLECT</code></li>\n<li><code>cv2.BORDER_REFLECT101</code></li>\n<li><code>cv2.BORDER_CONSTANT</code></li>\n<li><code>cv2.BORDER_WRAP</code></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2022/09/24/IMG%E6%95%B0%E7%BB%84%E7%9B%B8%E5%85%B3/",
            "url": "http://example.com/2022/09/24/IMG%E6%95%B0%E7%BB%84%E7%9B%B8%E5%85%B3/",
            "title": "IMG数组相关",
            "date_published": "2022-09-24T03:43:00.000Z",
            "content_html": "<p>图片ROI区域选取：<code>img[0:100,0:100]</code></p>\n<pre><code class=\"py\">img[垂直区域, 水平区域, 颜色通道]\n</code></pre>\n<p>注：<code>cv2.imread()</code>读取顺序是BGR</p>\n<hr>\n<p>取单通道值：</p>\n<pre><code class=\"python\"># 将G,B通道写入0\nimg[:,:,0] = 0\nimg[:,:,1] = 0\n</code></pre>\n<p>垂直翻转：<code>img[::-1,:]</code></p>\n<p>水平翻转：<code>img[:,::-1]</code></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2022/09/20/cv%E5%9F%BA%E7%A1%80%E7%9B%B8%E5%85%B3%E4%B8%8Efloat_uint8%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",
            "url": "http://example.com/2022/09/20/cv%E5%9F%BA%E7%A1%80%E7%9B%B8%E5%85%B3%E4%B8%8Efloat_uint8%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/",
            "title": "cv基础相关与float/uint8类型转换",
            "date_published": "2022-09-20T15:37:00.000Z",
            "content_html": "<h3 id=\"cv基本\"><a href=\"#cv基本\" class=\"headerlink\" title=\"cv基本\"></a>cv基本</h3><pre><code class=\"python\">img = cv2.imread(&quot;Path&quot;)    #打开图片\ncv2 = imshow(&quot;窗口标题&quot;, img)\t#显示\n</code></pre>\n<h3 id=\"resize\"><a href=\"#resize\" class=\"headerlink\" title=\"resize()\"></a>resize()</h3><pre><code class=\"python\">dst = cv2.resize(src,dsize,dst=None,fx=None,fy=None,interpolation=None)\n</code></pre>\n<ul>\n<li><strong>src</strong>：输入图像</li>\n<li><strong>dsize</strong>：输出图像的大小。如果该参数为 0，表示缩放之后的大小需要通过公式计算，<code>dsize = Size(round(fx*src.cols),round(fy*src.rows))</code>。其中 <code>fx</code> 与 <code>fy</code> 是图像 Width 方向和 Height 方向的缩放比例。</li>\n<li><strong>fx</strong>：Width 方向的缩放比例，如果是 0，按照 <code>dsize * width/src.cols</code> 计算</li>\n<li><strong>fy</strong>：Height 方向的缩放比例，如果是 0，按照 <code>dsize * height/src.rows</code> 计算</li>\n<li><strong>interpolation</strong>：插值算法类型，或者叫做插值方式，默认为双线性插值</li>\n<li>方法返回结果 dst 表示输出图像。</li>\n</ul>\n<h3 id=\"相关参数\"><a href=\"#相关参数\" class=\"headerlink\" title=\"相关参数\"></a>相关参数</h3><pre><code class=\"python\">a=cv2.imread(&quot;1.jpg&quot;)\nprint(a.shape[0], a.shape[1], a.shape[2])\n</code></pre>\n<p>shape0 : 垂直尺寸</p>\n<p>shape1 : 水平尺寸</p>\n<p>shape2 : 颜色通道</p>\n<h3 id=\"数据类型查看与转换\"><a href=\"#数据类型查看与转换\" class=\"headerlink\" title=\"数据类型查看与转换\"></a>数据类型查看与转换</h3><h5 id=\"type-dtype-astype-区别\"><a href=\"#type-dtype-astype-区别\" class=\"headerlink\" title=\"type() ,dtype() ,astype()区别\"></a>type() ,dtype() ,astype()区别</h5><table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>type()</td>\n<td>返回数据结构类型（list、dict、numpy、ndarray 等）</td>\n</tr>\n<tr>\n<td>dtype()</td>\n<td>返回数据元素的数据类型（int、float等）<br />备注：<br />1）由于 list、dict 等可以包含不同的数据类型，因此不可调用dtype()函数<br />2）np.array 中要求所有元素属于同一数据类型，因此可调用dtype()函数</td>\n</tr>\n<tr>\n<td>astype()</td>\n<td>改变np.array中所有数据元素的数据类型。<br />备注：能用dtype() 才能用 astype()</td>\n</tr>\n</tbody></table>\n<h5 id=\"类型转换\"><a href=\"#类型转换\" class=\"headerlink\" title=\"类型转换\"></a>类型转换</h5><p>方法1：</p>\n<pre><code class=\"python\"># 通过np转换类型后除以255得到float类型\na = a.astype(np.float32)\na/=255.0\nprint(a)\n</code></pre>\n<p>方法2：</p>\n<pre><code class=\"python\"># 直接使用skimage转换\na = skimage.img_as_float(a)  #默认为float64，可选img_as_float32\n</code></pre>\n",
            "tags": []
        }
    ]
}