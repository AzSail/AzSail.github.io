{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"算法\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/02/04/%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2023/02/04/%E6%9C%80%E7%9F%AD%E8%B7%AF%E9%97%AE%E9%A2%98/",
            "title": "最短路问题",
            "date_published": "2023-02-04T10:51:00.000Z",
            "content_html": "<h1 id=\"单源最短路\"><a href=\"#单源最短路\" class=\"headerlink\" title=\"单源最短路\"></a>单源最短路</h1><h2 id=\"dijkstra-稠密图\"><a href=\"#dijkstra-稠密图\" class=\"headerlink\" title=\"dijkstra 稠密图\"></a>dijkstra 稠密图</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m, s;</span><br><span class=\"line\"><span class=\"type\">int</span> g[N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> dist[N];</span><br><span class=\"line\"><span class=\"type\">bool</span> st[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dijkstra</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dist, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\"></span><br><span class=\"line\">    dist[s] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = <span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!st[j] &amp;&amp; (t == <span class=\"number\">-1</span> || dist[t] &gt; dist[j]))</span><br><span class=\"line\">                t = j;</span><br><span class=\"line\">        st[t] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            dist[j] = <span class=\"built_in\">min</span>(dist[j], dist[t] + g[t][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//\tif(dist[n] == 0x3f3f3f3f) return -1;</span></span><br><span class=\"line\">    <span class=\"comment\">//\telse return n;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %d&quot;</span>, &amp;n, &amp;m, &amp;s);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(g, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> g);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> a, b, c;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (m--) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class=\"line\">        g[a][b] = <span class=\"built_in\">min</span>(g[a][b], c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//\tint t = dijkstra();</span></span><br><span class=\"line\">    <span class=\"comment\">//\tprintf(&quot;%d&quot;, t);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">dijkstra</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, dist[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"堆优化dijkstra\"><a href=\"#堆优化dijkstra\" class=\"headerlink\" title=\"堆优化dijkstra\"></a>堆优化dijkstra</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">2e6</span> + <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; PII;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m, s;</span><br><span class=\"line\"><span class=\"type\">int</span> h[N], ne[N], e[N], w[N], idx;</span><br><span class=\"line\"><span class=\"type\">int</span> dist[N];</span><br><span class=\"line\"><span class=\"type\">bool</span> st[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b, <span class=\"type\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">    w[idx] = c, e[idx] = b, ne[idx] = h[a], h[a] = idx++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dijkstra</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dist, <span class=\"number\">127</span>, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\">    dist[s] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;</span><br><span class=\"line\">    heap.<span class=\"built_in\">push</span>(&#123;<span class=\"number\">0</span>, s&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (heap.<span class=\"built_in\">size</span>()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">auto</span> t = heap.<span class=\"built_in\">top</span>();</span><br><span class=\"line\">        heap.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> ver = t.second, distance = t.first;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (st[ver]) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        st[ver] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = h[ver]; i != <span class=\"number\">-1</span>; i = ne[i]) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> j = e[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dist[j] &gt; distance + w[i]) &#123;</span><br><span class=\"line\">                dist[j] = distance + w[i];</span><br><span class=\"line\">                heap.<span class=\"built_in\">push</span>(&#123;dist[j], j&#125;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//\tif(dist[n] == 0x3f3f3f3f) return -1;</span></span><br><span class=\"line\">    <span class=\"comment\">//\telse return n;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %d&quot;</span>, &amp;n, &amp;m, &amp;s);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(h, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span> h);</span><br><span class=\"line\">    <span class=\"type\">int</span> a, b, c;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (m--) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class=\"line\">        <span class=\"built_in\">add</span>(a, b, c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//\tint t = dijkstra();</span></span><br><span class=\"line\">    <span class=\"comment\">//\tprintf(&quot;%d&quot;, t);</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">dijkstra</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, dist[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Bellman-Ford\"><a href=\"#Bellman-Ford\" class=\"headerlink\" title=\"Bellman-Ford\"></a>Bellman-Ford</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">505</span>, M = <span class=\"number\">10010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m, k;</span><br><span class=\"line\"><span class=\"type\">int</span> dist[N], backup[N], st[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a, b, w;</span><br><span class=\"line\">&#125; edges[M];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">b_f</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dist, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\">    dist[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; k; i++) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">memcpy</span>(backup, dist, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> a = edges[j].a, b = edges[j].b, w = edges[j].w;</span><br><span class=\"line\">            dist[b] = <span class=\"built_in\">min</span>(dist[b], backup[a] + w);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (dist[n] &gt;= <span class=\"number\">0x3f3f3f3f</span> / <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> dist[n];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;k);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x, y, z;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;x, &amp;y, &amp;z);</span><br><span class=\"line\">        edges[i] = &#123;x, y, z&#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> t = <span class=\"built_in\">b_f</span>();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (t == <span class=\"number\">-1</span> &amp;&amp; dist[n] != <span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;impossible&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"SPFA\"><a href=\"#SPFA\" class=\"headerlink\" title=\"SPFA\"></a>SPFA</h2><p><img data-src=\"https://mioe-xyz.oss-cn-shanghai.aliyuncs.com/usr/uploads/2023/02/568055134.png\" alt=\"《信息学奥赛一本通》 , usaco training 3.2\"></p>\n<h4 id=\"输入样例\"><a href=\"#输入样例\" class=\"headerlink\" title=\"输入样例\"></a>输入样例</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3 4 5</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">1 2 1</span><br><span class=\"line\">1 3 5</span><br><span class=\"line\">2 3 7</span><br><span class=\"line\">2 4 3</span><br><span class=\"line\">3 4 5</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出样例\"><a href=\"#输出样例\" class=\"headerlink\" title=\"输出样例\"></a>输出样例</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">8</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"AC\"><a href=\"#AC\" class=\"headerlink\" title=\"AC\"></a>AC</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">510</span>, P = <span class=\"number\">805</span>, C = <span class=\"number\">1455</span> * <span class=\"number\">2</span>;    <span class=\"comment\">// 无向图 边 * 2;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">bool</span> st[P];</span><br><span class=\"line\"><span class=\"type\">int</span> cow[N];</span><br><span class=\"line\"><span class=\"type\">int</span> dist[P];</span><br><span class=\"line\"><span class=\"type\">int</span> ne[C], e[C], h[C], w[C], idx;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b, <span class=\"type\">int</span> v)</span> </span>&#123;</span><br><span class=\"line\">    e[idx] = b, w[idx] = v, ne[idx] = h[a], h[a] = idx++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">spfa</span><span class=\"params\">(<span class=\"type\">int</span> cw)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(dist, <span class=\"number\">0x3f</span>, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\">    dist[cw] = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    queue&lt;<span class=\"type\">int</span>&gt; q;</span><br><span class=\"line\">    q.<span class=\"built_in\">push</span>(cw);</span><br><span class=\"line\">    st[cw] = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> t = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">        q.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">        st[t] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = h[t]; i != <span class=\"number\">-1</span>; i = ne[i]) &#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> j = e[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dist[j] &gt; dist[t] + w[i]) &#123;</span><br><span class=\"line\">                dist[j] = dist[t] + w[i];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!st[j]) &#123;</span><br><span class=\"line\">                    q.<span class=\"built_in\">push</span>(j);</span><br><span class=\"line\">                    st[j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n, p, c;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; p &gt;&gt; c;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) cin &gt;&gt; cow[i];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(h, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span> h);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; c; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> a, b, v;</span><br><span class=\"line\">        cin &gt;&gt; a &gt;&gt; b &gt;&gt; v;</span><br><span class=\"line\">        <span class=\"built_in\">add</span>(a, b, v);</span><br><span class=\"line\">        <span class=\"built_in\">add</span>(b, a, v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0x3f3f3f3f</span>, t = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= p; i++) &#123;</span><br><span class=\"line\">        t = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">spfa</span>(i);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (t &gt;= <span class=\"number\">0x3f3f3f3f</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            t += dist[cow[j]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res = <span class=\"built_in\">min</span>(res, t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cout &lt;&lt; res;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"负环判断\"><a href=\"#负环判断\" class=\"headerlink\" title=\"负环判断\"></a>负环判断</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnt[x] = cnt[i] + <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(cnt[x] &gt;= n) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"多源最短路\"><a href=\"#多源最短路\" class=\"headerlink\" title=\"多源最短路\"></a>多源最短路</h1><h2 id=\"Floyd\"><a href=\"#Floyd\" class=\"headerlink\" title=\"Floyd\"></a>Floyd</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">205</span>, inf = <span class=\"number\">0x3f3f3f3f</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> g[N][N], path[N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m, q;</span><br><span class=\"line\"><span class=\"type\">int</span> tx, ty;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">writePath</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (path[x][y] != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">writePath</span>(x, path[x][y]);</span><br><span class=\"line\">        cout &lt;&lt; path[x][y] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (y == ty) cout &lt;&lt; y &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">floyd</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> k = <span class=\"number\">1</span>; k &lt;= n; k++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (g[i][k] + g[k][j] &lt; g[i][j]) &#123;</span><br><span class=\"line\">                    g[i][j] = g[i][k] + g[k][j];</span><br><span class=\"line\">                    path[i][j] = path[k][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i == j) g[i][j] = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> g[i][j] = inf;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x, y, z;</span><br><span class=\"line\">        cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class=\"line\">        path[x][y] = x;</span><br><span class=\"line\">        g[x][y] = <span class=\"built_in\">min</span>(g[x][y], z);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">floyd</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    cin &gt;&gt; tx &gt;&gt; ty;</span><br><span class=\"line\">    cout &lt;&lt; g[tx][ty] &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"built_in\">writePath</span>(tx, ty);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<pre><code>\n</code></pre>\n",
            "tags": [
                "模板"
            ]
        },
        {
            "id": "http://example.com/2023/02/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86%EF%BC%88%E9%82%BB%E6%8E%A5%E8%A1%A8%EF%BC%89/",
            "url": "http://example.com/2023/02/03/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E9%81%8D%E5%8E%86%EF%BC%88%E9%82%BB%E6%8E%A5%E8%A1%A8%EF%BC%89/",
            "title": "树的深度优先遍历（邻接表）",
            "date_published": "2023-02-03T10:24:20.000Z",
            "content_html": "<h4 id=\"DFS\"><a href=\"#DFS\" class=\"headerlink\" title=\"DFS\"></a>DFS</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> idx, n;</span><br><span class=\"line\"><span class=\"type\">int</span> h[N], e[N], ne[N];</span><br><span class=\"line\"><span class=\"type\">bool</span> st[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">ins</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\te[idx] = b;</span><br><span class=\"line\">\tne[idx] = h[a];</span><br><span class=\"line\">\th[a] = idx++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> u)</span></span>&#123;</span><br><span class=\"line\">\tst[u] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\tcout &lt;&lt; u;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = h[u]; i != <span class=\"number\">-1</span>; i = ne[i])&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> j = e[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!st[j]) <span class=\"built_in\">dfs</span>(j);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(h, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span> h);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a, b;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">\t\t<span class=\"built_in\">ins</span>(a, b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "模板"
            ]
        },
        {
            "id": "http://example.com/2023/02/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/",
            "url": "http://example.com/2023/02/02/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%93%88%E5%B8%8C/",
            "title": "字符串哈希",
            "date_published": "2023-02-02T08:36:57.000Z",
            "content_html": "<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1010</span>, P = <span class=\"number\">131</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> h[N], p[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">char</span> str[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">unsigned</span> <span class=\"type\">long</span> <span class=\"type\">long</span> <span class=\"title\">gethash</span><span class=\"params\">(<span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> h[r] - h[l - <span class=\"number\">1</span>] * p[r - l + <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %s&quot;</span>, &amp;n, &amp;m, str + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tp[<span class=\"number\">0</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">\t\tp[i] = p[i - <span class=\"number\">1</span>] * P;</span><br><span class=\"line\">\t\th[i] = h[i - <span class=\"number\">1</span>] * P + str[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> l1, r1, l2, r2;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %d %d&quot;</span>, &amp;l1, &amp;r1, &amp;l2, &amp;r2);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">gethash</span>(l1, r1) == <span class=\"built_in\">gethash</span>(l2, r2)) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Yes\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;No\\n&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "模板"
            ]
        },
        {
            "id": "http://example.com/2023/02/01/%E5%B0%8F%E6%A0%B9%E5%A0%86/",
            "url": "http://example.com/2023/02/01/%E5%B0%8F%E6%A0%B9%E5%A0%86/",
            "title": "小根堆",
            "date_published": "2023-02-01T10:38:45.000Z",
            "content_html": "<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e6</span>+<span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> hp[N], idx;</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">down</span><span class=\"params\">(<span class=\"type\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> t = k;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(hp[k &lt;&lt; <span class=\"number\">1</span>] &lt; hp[t] &amp;&amp; (k &lt;&lt; <span class=\"number\">1</span>) &lt;= idx) t = k &lt;&lt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(hp[k &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>] &lt; hp[t] &amp;&amp; (k &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>) &lt;= idx) t = k &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(t != k)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">swap</span>(hp[k], hp[t]);</span><br><span class=\"line\">\t\t<span class=\"built_in\">down</span>(t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">up</span><span class=\"params\">(<span class=\"type\">int</span> k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(k &gt;&gt; <span class=\"number\">1</span> &amp;&amp; hp[k &gt;&gt; <span class=\"number\">1</span>] &gt; hp[k])&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">swap</span>(hp[k &gt;&gt; <span class=\"number\">1</span>], hp[k]);</span><br><span class=\"line\">\t\tk &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> x, y;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;x);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;y);</span><br><span class=\"line\">\t\t\thp[++idx] = y;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">up</span>(idx);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(x == <span class=\"number\">2</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, hp[<span class=\"number\">1</span>]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> hp[<span class=\"number\">1</span>] = hp[idx], idx--, <span class=\"built_in\">down</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "模板"
            ]
        },
        {
            "id": "http://example.com/2023/01/31/%E9%9B%86%E5%90%88%E4%B8%8E%E5%B9%B6%E6%9F%A5%E9%9B%86/",
            "url": "http://example.com/2023/01/31/%E9%9B%86%E5%90%88%E4%B8%8E%E5%B9%B6%E6%9F%A5%E9%9B%86/",
            "title": "集合与并查集",
            "date_published": "2023-01-31T10:11:00.000Z",
            "content_html": "<h4 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> son[N][<span class=\"number\">26</span>], cnt[N], idx;</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">insert</span><span class=\"params\">(string str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; str[i]; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> u = str[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!son[p][u]) son[p][u] = ++idx;</span><br><span class=\"line\">\t\tp = son[p][u];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcnt[p]++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">query</span><span class=\"params\">(string str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> p = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; str[i]; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> u = str[i] - <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!son[p][u]) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tp = son[p][u];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> cnt[p];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">char</span> op;</span><br><span class=\"line\">\t\tstring str;</span><br><span class=\"line\">\t\tcin &gt;&gt; op &gt;&gt; str;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(op == <span class=\"string\">&#x27;I&#x27;</span>) <span class=\"built_in\">insert</span>(str);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, <span class=\"built_in\">query</span>(str)); </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"并查集\"><a href=\"#并查集\" class=\"headerlink\" title=\"并查集\"></a>并查集</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">10010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> p[N], n, m;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(p[x] != x) p[x] = <span class=\"built_in\">find</span>(p[x]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> x;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) p[i] = i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> z, x, y;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;z, &amp;x, &amp;y);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(z == <span class=\"number\">1</span>) p[<span class=\"built_in\">find</span>(x)] = <span class=\"built_in\">find</span>(y);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"built_in\">find</span>(x) == <span class=\"built_in\">find</span>(y)) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Y\\n&quot;</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;N\\n&quot;</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "模板"
            ]
        },
        {
            "id": "http://example.com/2023/01/30/KMP/",
            "url": "http://example.com/2023/01/30/KMP/",
            "title": "KMP",
            "date_published": "2023-01-30T10:25:00.000Z",
            "content_html": "<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span>, M = <span class=\"number\">1000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">char</span> p[N], s[M];</span><br><span class=\"line\"><span class=\"type\">int</span> ne[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; p + <span class=\"number\">1</span> &gt;&gt; m &gt;&gt; s + <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>, j = <span class=\"number\">0</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(j &amp;&amp; p[i] != p[j + <span class=\"number\">1</span>]) j = ne[j];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(p[i] == p[j + <span class=\"number\">1</span>]) j++;</span><br><span class=\"line\">\t\tne[i] = j;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>, j = <span class=\"number\">0</span>; i &lt;= m; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(j &amp;&amp; s[i] != p[j + <span class=\"number\">1</span>]) j = ne[j];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(s[i] == p[j + <span class=\"number\">1</span>]) j++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(j == n)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, i - n);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/01/30/%E5%8D%95%E8%B0%83%E6%A0%88%E3%80%81%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%EF%BC%88%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%EF%BC%89/",
            "url": "http://example.com/2023/01/30/%E5%8D%95%E8%B0%83%E6%A0%88%E3%80%81%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%EF%BC%88%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%EF%BC%89/",
            "title": "单调栈、滑动窗口（单调队列）",
            "date_published": "2023-01-30T09:07:00.000Z",
            "content_html": "<h4 id=\"单调栈\"><a href=\"#单调栈\" class=\"headerlink\" title=\"单调栈\"></a>单调栈</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> stk[N], arr[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, t;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; arr[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(t &amp;&amp; arr[i] &lt;= stk[t]) t--;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(t) cout &lt;&lt; stk[t] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> cout &lt;&lt; <span class=\"number\">-1</span> &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\tstk[++t] = arr[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"单调队列\"><a href=\"#单调队列\" class=\"headerlink\" title=\"单调队列\"></a>单调队列</h4><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> arr[N], q[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, k;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>, &amp;n, &amp;k);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> h = <span class=\"number\">0</span>, r = <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(h &lt;= r &amp;&amp; i - k + <span class=\"number\">1</span> &gt; q[h]) h++;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(h &lt;= r &amp;&amp; arr[q[r]] &gt;= arr[i]) r--;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tq[++r] = i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i &gt;= k - <span class=\"number\">1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, arr[q[h]]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/01/20/%E5%8F%8C%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/",
            "url": "http://example.com/2023/01/20/%E5%8F%8C%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D/",
            "title": "双指针数组去重",
            "date_published": "2023-01-20T12:23:01.000Z",
            "content_html": "<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n; </span><br><span class=\"line\"><span class=\"type\">int</span> arr[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) cin &gt;&gt; arr[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> j = <span class=\"number\">0</span>;\t<span class=\"comment\">// 非重复个数</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!i || arr[i] != arr[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">\t\t\tarr[j++] = arr[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/01/20/%E7%A6%BB%E6%95%A3%E5%8C%96%E5%8C%BA%E9%97%B4%E5%92%8C/",
            "url": "http://example.com/2023/01/20/%E7%A6%BB%E6%95%A3%E5%8C%96%E5%8C%BA%E9%97%B4%E5%92%8C/",
            "title": "离散化区间和",
            "date_published": "2023-01-20T11:29:00.000Z",
            "content_html": "<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; PII;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> arr[N], sum[N];</span><br><span class=\"line\">vector&lt;<span class=\"type\">int</span>&gt; alls;</span><br><span class=\"line\">vector&lt;PII&gt; add, query;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 查找x在alls数组中的下标</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">find</span><span class=\"params\">(<span class=\"type\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> l = <span class=\"number\">0</span>, r = alls.<span class=\"built_in\">size</span>() - <span class=\"number\">1</span>, mid;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(l &lt; r)&#123;</span><br><span class=\"line\">\t\tmid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(alls[mid] &gt;= x) r = mid;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> l + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> x, c;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; x &gt;&gt; c;</span><br><span class=\"line\">\t\tadd.<span class=\"built_in\">push_back</span>(&#123;x, c&#125;);</span><br><span class=\"line\">\t\talls.<span class=\"built_in\">push_back</span>(x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> l, r;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; m; i++)&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; l &gt;&gt; r;</span><br><span class=\"line\">\t\tquery.<span class=\"built_in\">push_back</span>(&#123;l, r&#125;);</span><br><span class=\"line\">\t\talls.<span class=\"built_in\">push_back</span>(l);</span><br><span class=\"line\">\t\talls.<span class=\"built_in\">push_back</span>(r);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 排序去重</span></span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(alls.<span class=\"built_in\">begin</span>(), alls.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\talls.<span class=\"built_in\">erase</span>(<span class=\"built_in\">unique</span>(alls.<span class=\"built_in\">begin</span>(), alls.<span class=\"built_in\">end</span>()), alls.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> item : add)</span><br><span class=\"line\">\t\tarr[<span class=\"built_in\">find</span>(item.first)] += item.second;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 处理前缀和</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= alls.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t\tsum[i] = sum[i - <span class=\"number\">1</span>] + arr[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> item : query)</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, sum[<span class=\"built_in\">find</span>(item.second)] - sum[<span class=\"built_in\">find</span>(item.first) - <span class=\"number\">1</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法模板"
            ]
        },
        {
            "id": "http://example.com/2023/01/10/gcd%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%A8%A1%E6%9D%BF/",
            "url": "http://example.com/2023/01/10/gcd%E4%B8%8E%E6%AC%A7%E6%8B%89%E8%B4%A8%E6%95%B0%E7%AD%9B%E6%A8%A1%E6%9D%BF/",
            "title": "gcd与欧拉质数筛模板",
            "date_published": "2023-01-10T08:04:00.000Z",
            "content_html": "<h2 id=\"欧几里得辗转相除法\"><a href=\"#欧几里得辗转相除法\" class=\"headerlink\" title=\"欧几里得辗转相除法\"></a>欧几里得辗转相除法</h2><p>$gcd(a, b)&#x3D;gcd(b,a\\ mod\\ b)&#x3D;···&#x3D;gcd(n,0)$</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> b ? <span class=\"built_in\">gcd</span>(b, a % b) : a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"欧拉质数筛\"><a href=\"#欧拉质数筛\" class=\"headerlink\" title=\"欧拉质数筛\"></a>欧拉质数筛</h2><h4 id=\"时间复杂度-O-n\"><a href=\"#时间复杂度-O-n\" class=\"headerlink\" title=\"时间复杂度$O(n)$\"></a>时间复杂度$O(n)$</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e8</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> p[N], cnt;</span><br><span class=\"line\"><span class=\"type\">bool</span> st[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">get_primes</span><span class=\"params\">(<span class=\"type\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">2</span>; i &lt;= n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!st[i]) p[cnt++] = i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; i * p[i] &lt;= n; j++)&#123;</span><br><span class=\"line\">\t\t\tst[p[j] * i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i % p[j] == <span class=\"number\">0</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "数论"
            ]
        },
        {
            "id": "http://example.com/2023/01/08/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/",
            "url": "http://example.com/2023/01/08/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/",
            "title": "树的直径",
            "date_published": "2023-01-08T08:58:43.000Z",
            "content_html": "<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">Node</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> id, w;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">vector&lt;Node&gt; m[N];</span><br><span class=\"line\"><span class=\"type\">int</span> dist[N];</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> idx, <span class=\"type\">int</span> root, <span class=\"type\">int</span> dst)</span></span>&#123;</span><br><span class=\"line\">\tdist[idx] = dst;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> node : m[idx])</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(node.id != root)\t<span class=\"built_in\">dfs</span>(node.id, idx, dst + node.w);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> p, q, d, t;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\tt = n - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;p, &amp;q, &amp;d);</span><br><span class=\"line\">\t\tm[p].<span class=\"built_in\">push_back</span>(&#123;q, d&#125;);</span><br><span class=\"line\">\t\tm[q].<span class=\"built_in\">push_back</span>(&#123;p, d&#125;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"type\">int</span> idx = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dist[i] &gt; dist[idx]) idx = i;</span><br><span class=\"line\">\t<span class=\"built_in\">dfs</span>(idx, <span class=\"number\">-1</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dist[i] &gt; dist[idx]) idx = i;</span><br><span class=\"line\">\tidx = dist[idx];</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld&quot;</span>, <span class=\"number\">10</span> * idx + (<span class=\"number\">1ll</span> + idx) * idx / <span class=\"number\">2</span>);\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2023/01/05/BFS%E6%A8%A1%E6%9D%BF/",
            "url": "http://example.com/2023/01/05/BFS%E6%A8%A1%E6%9D%BF/",
            "title": "BFS模板",
            "date_published": "2023-01-05T09:40:00.000Z",
            "content_html": "<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><p>字符 E 表示奶酪所在的位置，字符 # 表示墙壁，字符 . 表示可以通行，</p>\n<p>对于每一组数据，输出吃到奶酪的最少单位时间。</p>\n<p>若无法吃到奶酪，则输出“oop!”（只输出引号里面的内容，不输出引号）。</p>\n<p>在 1 个单位时间内可以从当前的位置走到它上下左右四个方向上的任意一个位置，但不能走出地图边界。</p>\n<h4 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h4><h6 id=\"二维\"><a href=\"#二维\" class=\"headerlink\" title=\"二维\"></a>二维</h6><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">210</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 方向偏移量</span></span><br><span class=\"line\"><span class=\"type\">int</span> dx[<span class=\"number\">4</span>] = &#123;<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> dy[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">-1</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">// 距离</span></span><br><span class=\"line\"><span class=\"type\">int</span> dist[N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; start;</span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; ed;</span><br><span class=\"line\"><span class=\"comment\">// 迷宫</span></span><br><span class=\"line\"><span class=\"type\">char</span> g[N][N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bfs</span><span class=\"params\">(pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; s, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; e)</span></span>&#123;</span><br><span class=\"line\">\tqueue&lt;pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; q;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(dist, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span> dist);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdist[s.first][s.second] = <span class=\"number\">0</span>;\t\t\t\t\t\t<span class=\"comment\">// 起点</span></span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">\t\tpair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; t = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(t == e) <span class=\"keyword\">return</span> dist[t.first][t.second];\t\t\t<span class=\"comment\">// 判断是否终点</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> x = t.first + dx[i];</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> y = t.second + dy[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(x &lt; <span class=\"number\">0</span> || y &lt; <span class=\"number\">0</span> || x &gt;= n || y &gt;= m) <span class=\"keyword\">continue</span>;\t<span class=\"comment\">// 越界</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(g[x][y] == <span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">continue</span>;\t\t\t\t<span class=\"comment\">// 碰墙</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dist[x][y] != <span class=\"number\">-1</span>) <span class=\"keyword\">continue</span>;\t\t\t\t<span class=\"comment\">// 已遍历</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tdist[x][y] = dist[t.first][t.second] + <span class=\"number\">1</span>;\t\t<span class=\"comment\">// 距离加一</span></span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x, y&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> t;</span><br><span class=\"line\">\tcin &gt;&gt; t;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, g[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(g[i][j] == <span class=\"string\">&#x27;S&#x27;</span>) start = &#123;i, j&#125;;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(g[i][j] == <span class=\"string\">&#x27;E&#x27;</span>) ed = &#123;i, j&#125;;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> d = <span class=\"built_in\">bfs</span>(start, ed);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(d == <span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;oop!\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, d);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"三维\"><a href=\"#三维\" class=\"headerlink\" title=\"三维\"></a>三维</h5><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">101</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; start, ed, tmp;</span><br><span class=\"line\"><span class=\"type\">char</span> g[N][N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> st[N][N][N];</span><br><span class=\"line\"><span class=\"type\">int</span> dy[<span class=\"number\">4</span>] = &#123;<span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> dz[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>, <span class=\"number\">-1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">int</span> l, r, c;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">bfs</span><span class=\"params\">(pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; s, pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt; e)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(st, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span> st);</span><br><span class=\"line\">\tqueue&lt;pair&lt;<span class=\"type\">int</span>, pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&gt;&gt; q;</span><br><span class=\"line\">\tst[s.first][s.second.first][s.second.second] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!q.<span class=\"built_in\">empty</span>())&#123;</span><br><span class=\"line\">\t\ttmp = q.<span class=\"built_in\">front</span>();</span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tmp == e) <span class=\"keyword\">return</span> st[tmp.first][tmp.second.first][tmp.second.second];</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> x = tmp.first, y, z;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x + <span class=\"number\">1</span> &lt; l &amp;&amp; st[x + <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] == <span class=\"number\">-1</span> &amp;&amp; g[x + <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] != <span class=\"string\">&#x27;#&#x27;</span>)&#123;</span><br><span class=\"line\">\t\t\tst[x + <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] = st[tmp.first][tmp.second.first][tmp.second.second] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x + <span class=\"number\">1</span>, &#123;tmp.second.first, tmp.second.second&#125;&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x - <span class=\"number\">1</span> &gt;= <span class=\"number\">0</span> &amp;&amp; st[x - <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] == <span class=\"number\">-1</span> &amp;&amp; g[x - <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] != <span class=\"string\">&#x27;#&#x27;</span>)&#123;</span><br><span class=\"line\">\t\t\tst[x - <span class=\"number\">1</span>][tmp.second.first][tmp.second.second] = st[tmp.first][tmp.second.first][tmp.second.second] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x - <span class=\"number\">1</span>, &#123;tmp.second.first, tmp.second.second&#125;&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++)&#123;</span><br><span class=\"line\">\t\t\ty = tmp.second.first + dy[i];</span><br><span class=\"line\">\t\t\tz = tmp.second.second + dz[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(st[x][y][z] != <span class=\"number\">-1</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(y &lt; <span class=\"number\">0</span> || z &lt; <span class=\"number\">0</span> || y &gt;= r || z &gt;= c) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(g[x][y][z] == <span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t\tst[x][y][z] = st[tmp.first][tmp.second.first][tmp.second.second] + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tq.<span class=\"built_in\">push</span>(&#123;x, &#123;y, z&#125;&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(l == <span class=\"number\">0</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; l; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; r; j++) </span><br><span class=\"line\">\t\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, g[i][j]);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; l; i++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; r; j++)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> z = <span class=\"number\">0</span>; z &lt; c; z++)</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(g[i][j][z] == <span class=\"string\">&#x27;S&#x27;</span>) start = &#123;i, &#123;j, z&#125;&#125;;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(g[i][j][z] == <span class=\"string\">&#x27;E&#x27;</span>) ed = &#123;i, &#123;j, z&#125;&#125;;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> step = <span class=\"built_in\">bfs</span>(start, ed);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(step == <span class=\"number\">-1</span>) <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Trapped!\\n&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Escaped in %d minute(s).\\n&quot;</span>, step);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "BFS"
            ]
        },
        {
            "id": "http://example.com/2022/12/30/%E7%BA%BF%E6%AE%B5%E6%A0%91___%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84_%E6%A8%A1%E6%9D%BF/",
            "url": "http://example.com/2022/12/30/%E7%BA%BF%E6%AE%B5%E6%A0%91___%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84_%E6%A8%A1%E6%9D%BF/",
            "title": "线段树 / 树状数组 模板",
            "date_published": "2022-12-30T13:40:00.000Z",
            "content_html": "<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><p>给定 <strong>n</strong> 个数组成的一个数列，规定有两种操作，一是修改某个元素，二是求子数列 <strong>[<strong>a</strong>,<strong>b</strong>]</strong> 的连续和。</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含两个整数 <strong>n</strong> 和 <strong>m</strong>，分别表示数的个数和操作次数。</p>\n<p>第二行包含 <strong>n</strong> 个整数，表示完整数列。</p>\n<p>接下来 <strong>m</strong> 行，每行包含三个整数 <strong>k</strong>,<strong>a</strong>,<strong>b</strong> （<strong>k&#x3D;0</strong>，表示求子数列 <strong>[a,b]</strong> 的和；<strong>k&#x3D;1</strong>，表示第 <strong>a</strong> 个数加 <strong>b</strong>）。</p>\n<p>数列从 <strong>1</strong> 开始计数。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出若干行数字，表示 <strong>k</strong>&#x3D;<strong>0</strong> 时，对应的子数列 <strong>[<strong>a</strong>,<strong>b</strong>]</strong> 的连续和。</p>\n<h4 id=\"数据范围\"><a href=\"#数据范围\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h4><p><strong>1</strong>≤<strong>n</strong>≤<strong>100000</strong>,<br><strong>1</strong>≤<strong>m</strong>≤<strong>100000，<br>1</strong>≤<strong>a</strong>≤<strong>b</strong>≤<strong>n</strong>,<br>数据保证在任何时候，数列中所有元素之和均在 int 范围内。</p>\n<h4 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10 5</span><br><span class=\"line\">1 2 3 4 5 6 7 8 9 10</span><br><span class=\"line\">1 1 5</span><br><span class=\"line\">0 1 3</span><br><span class=\"line\">0 4 8</span><br><span class=\"line\">1 7 5</span><br><span class=\"line\">0 4 8</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">11</span><br><span class=\"line\">30</span><br><span class=\"line\">35</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"树状数组模板\"><a href=\"#树状数组模板\" class=\"headerlink\" title=\"树状数组模板\"></a>树状数组模板</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> arr[N], tr[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">lowbit</span><span class=\"params\">(<span class=\"type\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> i &amp; -i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"type\">int</span> index, <span class=\"type\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = index; i &lt;= n; i += <span class=\"built_in\">lowbit</span>(i))</span><br><span class=\"line\">\t\ttr[i] += x;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">change</span><span class=\"params\">(<span class=\"type\">int</span> index, <span class=\"type\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> c = x - arr[index];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = index; i &lt;= n; i += <span class=\"built_in\">lowbit</span>(i))</span><br><span class=\"line\">\t\ttr[i] += c;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">query</span><span class=\"params\">(<span class=\"type\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = index; i; i -= <span class=\"built_in\">lowbit</span>(i))</span><br><span class=\"line\">\t\tres += tr[i];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;arr[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">add</span>(i, arr[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> tag, l, r;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> res;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %d&quot;</span>, &amp;tag, &amp;l, &amp;r);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(tag) <span class=\"built_in\">add</span>(l, r);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, <span class=\"built_in\">query</span>(r) - <span class=\"built_in\">query</span>(l - <span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"线段树模板\"><a href=\"#线段树模板\" class=\"headerlink\" title=\"线段树模板\"></a>线段树模板</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">100010</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n, m;</span><br><span class=\"line\"><span class=\"type\">int</span> num[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">struct</span> <span class=\"title class_\">node</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> l, r;</span><br><span class=\"line\">\t<span class=\"type\">int</span> sum;</span><br><span class=\"line\">&#125;sgt[N * <span class=\"number\">4</span>];\t\t<span class=\"comment\">// 需要开N * 4</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 更新当前节点</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">pushup</span><span class=\"params\">(<span class=\"type\">int</span> root)</span></span>&#123;</span><br><span class=\"line\">\tsgt[root].sum = sgt[root &lt;&lt; <span class=\"number\">1</span>].sum + sgt[root &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>].sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 初始化线段树</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">build</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(l == r) sgt[root].sum = num[l];</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tsgt[root] = &#123;l, r&#125;;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> mid = l + r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"built_in\">build</span>(root &lt;&lt; <span class=\"number\">1</span>, l, mid);</span><br><span class=\"line\">\t\t<span class=\"built_in\">build</span>(root &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>, mid + <span class=\"number\">1</span>, r);</span><br><span class=\"line\">\t\t<span class=\"built_in\">pushup</span>(root);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">query</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> l, <span class=\"type\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(sgt[root].l &gt;= l &amp;&amp; sgt[root].r &lt;= r) <span class=\"keyword\">return</span> sgt[root].sum;</span><br><span class=\"line\">\t<span class=\"type\">int</span> mid = sgt[root].l + sgt[root].r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(l &lt;= mid) sum += <span class=\"built_in\">query</span>(root &lt;&lt; <span class=\"number\">1</span>, l, r);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(r &gt; mid) sum += <span class=\"built_in\">query</span>(root &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>, l, r);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">modify</span><span class=\"params\">(<span class=\"type\">int</span> root, <span class=\"type\">int</span> index, <span class=\"type\">int</span> c)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(sgt[root].l == sgt[root].r) sgt[root].sum += c;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> mid = sgt[root].l + sgt[root].r &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(index &lt;= mid) <span class=\"built_in\">modify</span>(root &lt;&lt; <span class=\"number\">1</span>, index, c);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">modify</span>(root &lt;&lt; <span class=\"number\">1</span> | <span class=\"number\">1</span>, index, c);</span><br><span class=\"line\">\t\t<span class=\"built_in\">pushup</span>(root);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class=\"line\">\t<span class=\"built_in\">build</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n);</span><br><span class=\"line\">\t<span class=\"type\">int</span> k, a, b;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d %d&quot;</span>, &amp;k, &amp;a, &amp;b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(k) <span class=\"built_in\">modify</span>(<span class=\"number\">1</span>, a, b);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, <span class=\"built_in\">query</span>(<span class=\"number\">1</span>, a, b));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法模板"
            ]
        },
        {
            "id": "http://example.com/2022/12/27/stringstream_%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC_int_double/",
            "url": "http://example.com/2022/12/27/stringstream_%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC_int_double/",
            "title": "stringstream 字符串转 int/double",
            "date_published": "2022-12-27T12:29:00.000Z",
            "content_html": "<p>某涉密单位下发了某种票据，并要在年终全部收回。</p>\n<p>每张票据有唯一的ID号。</p>\n<p>全年所有票据的ID号是连续的，但ID的开始数码是随机选定的。</p>\n<p>因为工作人员疏忽，在录入ID号的时候发生了一处错误，造成了某个ID断号，另外一个ID重号。</p>\n<p>你的任务是通过编程，找出断号的ID和重号的ID。</p>\n<p>假设断号不可能发生在最大和最小号。</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含整数 <strong>N</strong>，表示后面共有 <strong>N</strong> 行数据。</p>\n<p>接下来 <strong>N</strong> 行，每行包含空格分开的若干个（不大于100个）正整数（不大于100000），每个整数代表一个ID号。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>要求程序输出1行，含两个整数 <strong>m</strong>,<strong>n</strong>用空格分隔。</p>\n<p>其中，<strong>m</strong>表示断号ID，<strong>n</strong>表示重号ID。</p>\n<h4 id=\"数据范围\"><a href=\"#数据范围\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h4><p><strong>1</strong>≤<strong>N</strong>≤<strong>100</strong></p>\n<h4 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br><span class=\"line\">5 6 8 11 9 </span><br><span class=\"line\">10 12 9</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"输出样例：\"><a href=\"#输出样例：\" class=\"headerlink\" title=\"输出样例：\"></a>输出样例：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">7 9</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"AC代码\"><a href=\"#AC代码\" class=\"headerlink\" title=\"AC代码\"></a>AC代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">10001</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> c, n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\tstring line;</span><br><span class=\"line\">\t<span class=\"built_in\">getline</span>(cin, line);\t\\\\ cin 会读取换行符</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">getline</span>(cin, line);</span><br><span class=\"line\">\t\t<span class=\"function\">stringstream <span class=\"title\">ssin</span><span class=\"params\">(line)</span></span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(ssin &gt;&gt; a[c])&#123;</span><br><span class=\"line\">\t\t\tc++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(a, a + c);</span><br><span class=\"line\">\t<span class=\"type\">int</span> r1, r2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; c; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i] == a[i - <span class=\"number\">1</span>]) r1 = a[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i] - <span class=\"number\">2</span> == a[i - <span class=\"number\">1</span>]) r2 = a[i] - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; r2 &lt;&lt; <span class=\"string\">&quot; &quot;</span> &lt;&lt; r1;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"stringstream技巧：\"><a href=\"#stringstream技巧：\" class=\"headerlink\" title=\"stringstream技巧：\"></a>stringstream技巧：</h4><h5 id=\"转int-x2F-double\"><a href=\"#转int-x2F-double\" class=\"headerlink\" title=\"转int&#x2F;double\"></a>转int&#x2F;double</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string result = <span class=\"string\">&quot;10000&quot;</span>;\t<span class=\"comment\">// double 同理, result = &quot;1.5&quot;;</span></span><br><span class=\"line\"><span class=\"function\">stringstream <span class=\"title\">stream</span><span class=\"params\">(result)</span></span>;\t<span class=\"comment\">// 可以是字符串也可以是数字，总之后面直接输入到目标变量里面</span></span><br><span class=\"line\"><span class=\"type\">int</span> n = <span class=\"number\">0</span>;</span><br><span class=\"line\">stream &gt;&gt; n;\t<span class=\"comment\">//n 等于10000</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"转int-x2F-double数组\"><a href=\"#转int-x2F-double数组\" class=\"headerlink\" title=\"转int&#x2F;double数组\"></a>转int&#x2F;double数组</h5><p><code>stringstream</code>以空格作为分隔符</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string str = <span class=\"string\">&quot;1 2 3 4 5&quot;</span>;\t<span class=\"comment\">// double 同理</span></span><br><span class=\"line\"><span class=\"function\">stringstream <span class=\"title\">ssin</span><span class=\"params\">(str)</span></span>;</span><br><span class=\"line\"><span class=\"type\">int</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">10</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(ssin &gt;&gt; a[i]) i++;\t<span class=\"comment\">// 此时a[0] = 1, a[1] = 2 ...</span></span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2022/12/25/%E5%9C%A8%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97%E9%87%8C%E5%A4%84%E7%90%86%E6%B5%AE%E7%82%B9%E6%95%B0/",
            "url": "http://example.com/2022/12/25/%E5%9C%A8%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97%E9%87%8C%E5%A4%84%E7%90%86%E6%B5%AE%E7%82%B9%E6%95%B0/",
            "title": "在整数运算里处理浮点数",
            "date_published": "2022-12-25T08:23:44.000Z",
            "content_html": "<p><code>n = m / 2</code> 可以写成 <code>n * 2 = m</code></p>\n<p>同理：</p>\n<p><code>n &lt; m / 2</code> -&gt; <code>n * 2 &lt; m</code></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2022/12/21/AcWing_95._%E8%B4%B9%E8%A7%A3%E7%9A%84%E5%BC%80%E5%85%B3/",
            "url": "http://example.com/2022/12/21/AcWing_95._%E8%B4%B9%E8%A7%A3%E7%9A%84%E5%BC%80%E5%85%B3/",
            "title": "AcWing 95. 费解的开关",
            "date_published": "2022-12-21T11:02:00.000Z",
            "content_html": "<p>你玩过“拉灯”游戏吗？</p>\n<p><strong>25</strong> 盏灯排成一个 <strong>5</strong>×<strong>5</strong> 的方形。</p>\n<p>每一个灯都有一个开关，游戏者可以改变它的状态。</p>\n<p>每一步，游戏者可以改变某一个灯的状态。</p>\n<p>游戏者改变一个灯的状态会产生连锁反应：和这个灯上下左右相邻的灯也要相应地改变其状态。</p>\n<p>我们用数字 <strong>1</strong> 表示一盏开着的灯，用数字 <strong>0</strong> 表示关着的灯。</p>\n<p>下面这种状态</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10111</span><br><span class=\"line\">01101</span><br><span class=\"line\">10111</span><br><span class=\"line\">10000</span><br><span class=\"line\">11011</span><br></pre></td></tr></table></figure>\n\n<p>在改变了最左上角的灯的状态后将变成：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">01111</span><br><span class=\"line\">11101</span><br><span class=\"line\">10111</span><br><span class=\"line\">10000</span><br><span class=\"line\">11011</span><br></pre></td></tr></table></figure>\n\n<p>再改变它正中间的灯后状态将变成：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">01111</span><br><span class=\"line\">11001</span><br><span class=\"line\">11001</span><br><span class=\"line\">10100</span><br><span class=\"line\">11011</span><br></pre></td></tr></table></figure>\n\n<p>给定一些游戏的初始状态，编写程序判断游戏者是否可能在 <strong>6</strong>6 步以内使所有的灯都变亮。</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行输入正整数 <strong>n</strong>，代表数据中共有 <strong>n</strong> 个待解决的游戏初始状态。</p>\n<p>以下若干行数据分为 <strong>n</strong> 组，每组数据有 <strong>5</strong> 行，每行 <strong>5</strong> 个字符。</p>\n<p>每组数据描述了一个游戏的初始状态。</p>\n<p>各组数据间用一个空行分隔。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>一共输出 <strong>n</strong> 行数据，每行有一个小于等于 <strong>6</strong> 的整数，它表示对于输入数据中对应的游戏状态最少需要几步才能使所有灯变亮。</p>\n<p>对于某一个游戏初始状态，若 <strong>6</strong> 步以内无法使所有灯变亮，则输出 <strong>−1</strong>。</p>\n<h4 id=\"数据范围\"><a href=\"#数据范围\" class=\"headerlink\" title=\"数据范围\"></a>数据范围</h4><p><strong>0</strong>&lt;<strong>n</strong>≤<strong>500</strong></p>\n<h4 id=\"输入样例：\"><a href=\"#输入样例：\" class=\"headerlink\" title=\"输入样例：\"></a>输入样例：</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">00111</span><br><span class=\"line\">01011</span><br><span class=\"line\">10001</span><br><span class=\"line\">11010</span><br><span class=\"line\">11100</span><br><span class=\"line\"></span><br><span class=\"line\">11101</span><br><span class=\"line\">11101</span><br><span class=\"line\">11110</span><br><span class=\"line\">11111</span><br><span class=\"line\">11111</span><br><span class=\"line\"></span><br><span class=\"line\">01111</span><br><span class=\"line\">11111</span><br><span class=\"line\">11111</span><br><span class=\"line\">11111</span><br><span class=\"line\">11111</span><br></pre></td></tr></table></figure>\n\n<p>输出样例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3</span><br><span class=\"line\">2</span><br><span class=\"line\">-1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> light[<span class=\"number\">7</span>][<span class=\"number\">7</span>], backup[<span class=\"number\">7</span>][<span class=\"number\">7</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">turn</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\tbackup[x][y] = !backup[x][y];</span><br><span class=\"line\">\tbackup[x - <span class=\"number\">1</span>][y] = !backup[x - <span class=\"number\">1</span>][y];</span><br><span class=\"line\">\tbackup[x][y - <span class=\"number\">1</span>] = !backup[x ][y - <span class=\"number\">1</span>];</span><br><span class=\"line\">\tbackup[x + <span class=\"number\">1</span>][y] = !backup[x + <span class=\"number\">1</span>][y];</span><br><span class=\"line\">\tbackup[x][y + <span class=\"number\">1</span>] = !backup[x][y + <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> n;</span><br><span class=\"line\">\tstring str;</span><br><span class=\"line\">\tstr.<span class=\"built_in\">resize</span>(<span class=\"number\">7</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"type\">int</span> res = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> x = <span class=\"number\">1</span>; x &lt;= <span class=\"number\">5</span>; x++)&#123;</span><br><span class=\"line\">\t\t\tstring str;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, &amp;str[<span class=\"number\">0</span>]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> y = <span class=\"number\">1</span>; y &lt;= <span class=\"number\">5</span>; y++)</span><br><span class=\"line\">\t\t\t\tlight[x][y] = str[y - <span class=\"number\">1</span>] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 枚举操作而非状态</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 01001 表示操作第2和第5盏灯</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = <span class=\"number\">0</span>; k &lt; <span class=\"number\">32</span>; k++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">memcpy</span>(backup, light, <span class=\"keyword\">sizeof</span> light);</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> step = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= <span class=\"number\">5</span>; j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((k &gt;&gt; (j - <span class=\"number\">1</span>)) &amp; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"built_in\">turn</span>(<span class=\"number\">1</span>, j);</span><br><span class=\"line\">\t\t\t\t\tstep++;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">2</span>; j &lt;= <span class=\"number\">5</span>; j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> l = <span class=\"number\">1</span>; l &lt;= <span class=\"number\">5</span>; l++)&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(backup[j - <span class=\"number\">1</span>][l] == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">turn</span>(j, l);</span><br><span class=\"line\">\t\t\t\t\t\tstep++;</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"type\">bool</span> dark = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">1</span>; j &lt;= <span class=\"number\">5</span>; j++)&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(backup[<span class=\"number\">5</span>][j] != <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tdark = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(!dark)&#123;</span><br><span class=\"line\">\t\t\t\tres = <span class=\"built_in\">min</span>(res, step);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(res == <span class=\"number\">10</span> || res &gt; <span class=\"number\">6</span>) res = <span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; res;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2022/11/10/DFS%E5%88%A4%E6%96%AD%E8%BF%B7%E5%AE%AB%E6%97%A0%E8%A7%A3/",
            "url": "http://example.com/2022/11/10/DFS%E5%88%A4%E6%96%AD%E8%BF%B7%E5%AE%AB%E6%97%A0%E8%A7%A3/",
            "title": "DFS判断迷宫无解",
            "date_published": "2022-11-10T00:54:26.000Z",
            "content_html": "<p>回溯到原点既无解</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(src_x == x &amp;&amp; src_y == y)</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/11/08/Map_%E5%8D%95%E8%AF%8D%E5%88%86%E6%9E%90/",
            "url": "http://example.com/2021/11/08/Map_%E5%8D%95%E8%AF%8D%E5%88%86%E6%9E%90/",
            "title": "Map 单词分析",
            "date_published": "2021-11-08T07:30:00.000Z",
            "content_html": "<p><strong>蓝桥杯无法使用<code>for(x : y)&#123;&#125;</code> 、 <code>auto</code>等的C11语法和关键字</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">map&lt;char, int&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)&#123;</span><br><span class=\"line\">\tstring str;</span><br><span class=\"line\">\tchar mc;</span><br><span class=\"line\">\tint s = 0;</span><br><span class=\"line\">\tfor(int i = 97; i &lt;= 122; i++)&#123;</span><br><span class=\"line\">\t\tm.insert(make_pair((char)i, 0));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; str;</span><br><span class=\"line\">\tfor(int i = 0; i &lt; str.size(); i++)&#123;</span><br><span class=\"line\">\t\tm[str[i]]++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(map&lt;char, int&gt;::iterator i = m.begin(); i != m.end(); i++)&#123;</span><br><span class=\"line\">\t\tif(s &lt; i-&gt;second) mc = i-&gt;first, s = i-&gt;second;\t\t// 记录次数</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; mc &lt;&lt; endl &lt;&lt; m[mc];</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法"
            ]
        },
        {
            "id": "http://example.com/2021/11/08/DFS%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2021/11/08/DFS%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98/",
            "title": "DFS迷宫问题",
            "date_published": "2021-11-08T06:36:00.000Z",
            "content_html": "<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">#pragma GCC optimize(2)</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int m[101][101];</span><br><span class=\"line\">int xS, yS, xE, yE;</span><br><span class=\"line\">int s;</span><br><span class=\"line\"></span><br><span class=\"line\">void dfs(int x, int y)&#123;</span><br><span class=\"line\">\tif(x == xE &amp;&amp; y == yE)&#123;</span><br><span class=\"line\">\t\ts++;</span><br><span class=\"line\">\t\treturn;</span><br><span class=\"line\">\t&#125;else&#123;\t\t// 遍历四个方向 </span><br><span class=\"line\">\t\tm[x][y] = 0;</span><br><span class=\"line\">\t\tif(m[x + 1][y])&#123;</span><br><span class=\"line\">\t\t\tm[x + 1][y] = 0;\t\t// 占位，防止死循环 </span><br><span class=\"line\">\t\t\tdfs(x + 1, y);</span><br><span class=\"line\">\t\t\tm[x + 1][y] = 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif(m[x - 1][y])&#123;</span><br><span class=\"line\">\t\t\tm[x - 1][y] = 0;</span><br><span class=\"line\">\t\t\tdfs(x - 1, y);</span><br><span class=\"line\">\t\t\tm[x - 1][y] = 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif(m[x][y + 1])&#123;</span><br><span class=\"line\">\t\t\tm[x][y + 1] = 0;</span><br><span class=\"line\">\t\t\tdfs(x, y + 1);</span><br><span class=\"line\">\t\t\tm[x][y + 1] = 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif(m[x][y - 1])&#123;</span><br><span class=\"line\">\t\t\tm[x][y - 1] = 0;</span><br><span class=\"line\">\t\t\tdfs(x, y - 1);</span><br><span class=\"line\">\t\t\tm[x][y - 1] = 1;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)&#123;</span><br><span class=\"line\">\tios::sync_with_stdio(false);</span><br><span class=\"line\">\tint x, y, k, Ox, Oy;</span><br><span class=\"line\">\tcin &gt;&gt; x &gt;&gt; y &gt;&gt; k;</span><br><span class=\"line\">\tfor(int i = 1; i &lt;= x; i++)\t// 棋盘预定义</span><br><span class=\"line\">\t\tfor(int j = 1; j &lt;= y; j++)</span><br><span class=\"line\">\t\t\tm[i][j] = 1;</span><br><span class=\"line\">\tcin &gt;&gt; xS &gt;&gt; yS &gt;&gt; xE &gt;&gt; yE;</span><br><span class=\"line\">\tfor(int i = 0; i &lt; k; i++)&#123;\t// 预先写入障碍</span><br><span class=\"line\">\t\tcin &gt;&gt; Ox &gt;&gt; Oy;</span><br><span class=\"line\">\t\tm[Ox][Oy] = 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdfs(xS, yS);</span><br><span class=\"line\">\tcout &lt;&lt; s;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法"
            ]
        },
        {
            "id": "http://example.com/2021/11/04/Vector_%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "url": "http://example.com/2021/11/04/Vector_%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "title": "Vector 二分查找",
            "date_published": "2021-11-04T07:39:00.000Z",
            "content_html": "<p>二分查找：</p>\n<ul>\n<li>lower_bound：查找第一个大于或等于某个元素的位置。</li>\n<li>upper_bound：查找第一个大于某个元素的位置。</li>\n</ul>\n<p>Vector 插入元素</p>\n<ul>\n<li>iterator insert(iterator it, const T&amp; x)：iterator向量中迭代器指向元素前增加一个元素x</li>\n<li>iterator insert(iterator it, int n,const T&amp; x)：向量中迭代器指向元素前增加n个相同的元素x</li>\n<li>iterator insert(iterator it, const_iterator first, const_iterator last)：向量中迭代器指向元素前插入另一个相同类型向量的[first, last)间的数据</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)&#123;</span><br><span class=\"line\">\tvector&lt;int&gt; arr;</span><br><span class=\"line\">\tint t, k, a;</span><br><span class=\"line\">\tfor(int i = 0; i &lt; 9; i++)&#123;</span><br><span class=\"line\">\t\tcin &gt;&gt; t;</span><br><span class=\"line\">\t\tarr.push_back(t);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcin &gt;&gt; k;</span><br><span class=\"line\">\tauto pos = upper_bound(arr.begin(), arr.end(), k); \t// vector&lt;int&gt;::iterator</span><br><span class=\"line\">\tarr.insert(pos, k);</span><br><span class=\"line\">\tfor(int i = 0; i &lt; 10; i++)</span><br><span class=\"line\">\t\tcout &lt;&lt; arr[i] &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "算法"
            ]
        },
        {
            "id": "http://example.com/2021/10/28/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%A8%A1%E6%9D%BF/",
            "url": "http://example.com/2021/10/28/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%A8%A1%E6%9D%BF/",
            "title": "二叉树模板",
            "date_published": "2021-10-28T09:03:28.000Z",
            "content_html": "<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;bits/stdc++.h&gt;</span><br><span class=\"line\">#pragma GCC optimize(2)</span><br><span class=\"line\">using namespace std;</span><br><span class=\"line\"></span><br><span class=\"line\">struct tree&#123;</span><br><span class=\"line\">\tint left;</span><br><span class=\"line\">\tint right;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">tree t[1000];</span><br><span class=\"line\"></span><br><span class=\"line\">int dfs(int n)&#123;\t\t// 深度 </span><br><span class=\"line\">\tif(!n) return 0;</span><br><span class=\"line\">\treturn max(dfs(t[n].left), dfs(t[n].right)) + 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void f(int n)&#123;\t\t// 先序 </span><br><span class=\"line\">\tcout &lt;&lt; n &lt;&lt; &quot; &quot;;</span><br><span class=\"line\">\tif(t[n].left) f(t[n].left);</span><br><span class=\"line\">\tif(t[n].right) f(t[n].right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void s(int n)&#123;\t\t// 中序 </span><br><span class=\"line\">\tif(t[n].left) s(t[n].left);</span><br><span class=\"line\">\tcout &lt;&lt; n &lt;&lt; &quot; &quot;;</span><br><span class=\"line\">\tif(t[n].right) s(t[n].right);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">void e(int n)&#123;\t\t// 后序 </span><br><span class=\"line\">\tif(t[n].left) e(t[n].left);</span><br><span class=\"line\">\tif(t[n].right) e(t[n].right);</span><br><span class=\"line\">\tcout &lt;&lt; n &lt;&lt; &quot; &quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)&#123;</span><br><span class=\"line\">\tint n;</span><br><span class=\"line\">\tcin &gt;&gt; n;</span><br><span class=\"line\">\tfor(int i = 1; i &lt;= n; i++)</span><br><span class=\"line\">\t\tcin &gt;&gt; t[i].left &gt;&gt; t[i].right;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/10/28/%E5%8D%A1%E5%B8%B8%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%8C%E8%82%86%E6%97%A0%E5%BF%8C%E6%83%AESTL/",
            "url": "http://example.com/2021/10/28/%E5%8D%A1%E5%B8%B8%E5%B0%8F%E6%8A%80%E5%B7%A7%EF%BC%8C%E8%82%86%E6%97%A0%E5%BF%8C%E6%83%AESTL/",
            "title": "卡常小技巧，肆无忌惮STL",
            "date_published": "2021-10-28T08:25:00.000Z",
            "content_html": "<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#pragma GCC optimize(2)</span><br><span class=\"line\">ios::sync_with_stdio(false);</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/10/15/XX_XX_XX%E7%B1%BB%E5%9E%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8F%90%E5%8F%96%E6%95%B0%E5%AD%97/",
            "url": "http://example.com/2021/10/15/XX_XX_XX%E7%B1%BB%E5%9E%8B%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8F%90%E5%8F%96%E6%95%B0%E5%AD%97/",
            "title": "XX:XX:XX类型字符串提取数字",
            "date_published": "2021-10-15T09:26:16.000Z",
            "content_html": "<p>洛谷P1615</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cin &gt;&gt; time1</span><br><span class=\"line\">sscanf(time1.c_str(), &quot;%d:%d:%d&quot;, &amp;h1, &amp;m1, &amp;s1); // c_str()获取字符串地址</span><br><span class=\"line\">// 或者直接这样写 scanf(&quot;%d:%d:%d&quot;, &amp;h1, &amp;m1, &amp;s1);</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/10/01/P2911_[USACO08OCT]Bovine_Bones_G_(C)/",
            "url": "http://example.com/2021/10/01/P2911_[USACO08OCT]Bovine_Bones_G_(C)/",
            "title": "P2911 [USACO08OCT]Bovine Bones G (C)",
            "date_published": "2021-10-01T12:40:00.000Z",
            "content_html": "<p><img data-src=\"https://i.loli.net/2021/10/01/dcA2xWtmfYQRaqD.png\" alt=\"image.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">\t根据题意，总共3个骰子，每个骰子有 S个面，因为数据范围较小，可以直接选择暴力</span><br><span class=\"line\">\t每次总和记录到相应的结构体(Sum = 10 -&gt; struct[10])，结构体中保存两个数据：总和(num)、次数(times) </span><br><span class=\"line\">\t最后使用快排(qsort)筛出次数(times)最小的目标 </span><br><span class=\"line\">*/ </span><br><span class=\"line\"></span><br><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">struct A&#123;\t\t// 声明结构体，存放点数总和与次数 </span><br><span class=\"line\">\tint num;</span><br><span class=\"line\">\tint times;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">int compare(const void *a, const void *b)&#123;</span><br><span class=\"line\">\tstruct A *p1 = (struct A *)a;</span><br><span class=\"line\">\tstruct A *p2 = (struct A *)b;</span><br><span class=\"line\">\tif(p1-&gt;times == p2-&gt;times) return p1-&gt;num - p2-&gt;num;\t\t// 题意：如果出现概率一样时输出最小总和 </span><br><span class=\"line\">\treturn p2-&gt;times - p1-&gt;times;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)&#123;</span><br><span class=\"line\">\tint s1, s2, s3, s, i, j, k;</span><br><span class=\"line\">\tstruct A a[80];</span><br><span class=\"line\">\tscanf(&quot;%d %d %d&quot;, &amp;s1, &amp;s2, &amp;s3);</span><br><span class=\"line\">\tfor(i = 0; i &lt; 81; i++)&#123;</span><br><span class=\"line\">\t\t a[i].times = 0;</span><br><span class=\"line\">\t\t a[i].num = 0;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor(i = 1; i &lt;= s1; i++)</span><br><span class=\"line\">\t\tfor(j = 1; j &lt;= s2; j++)</span><br><span class=\"line\">\t\t\tfor(k = 1; k &lt;= s3; k++)&#123;</span><br><span class=\"line\">\t\t\t\ta[i + j + k].num = i + j + k;</span><br><span class=\"line\">\t\t\t\ta[i + j + k].times++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tqsort(a, 80, sizeof(struct A), compare);</span><br><span class=\"line\">\tprintf(&quot;%d&quot;, a[0].num);</span><br><span class=\"line\"></span><br><span class=\"line\">\treturn 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/09/11/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F_C%E8%AF%AD%E8%A8%80/",
            "url": "http://example.com/2021/09/11/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F_C%E8%AF%AD%E8%A8%80/",
            "title": "冒泡排序 C语言",
            "date_published": "2021-09-11T09:10:00.000Z",
            "content_html": "<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include&lt;stdio.h&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">/* 交换函数</span><br><span class=\"line\">void swap(int *pa, int *pb)&#123;</span><br><span class=\"line\">\tint temp;</span><br><span class=\"line\">\tif(*pa &gt; *pb)&#123;</span><br><span class=\"line\">\t\ttemp = *pb;</span><br><span class=\"line\">\t\t*pb = *pa;</span><br><span class=\"line\">\t\t*pa = temp; </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">int main(void)&#123;</span><br><span class=\"line\">\tint a[] = &#123;1, 3, 5, 2, 14, 8, 4 ,9&#125;;</span><br><span class=\"line\">\tint i, j;</span><br><span class=\"line\">\tint temp;</span><br><span class=\"line\">\tint num = (sizeof(a) / sizeof(a[0]));</span><br><span class=\"line\">\tprintf(&quot;排序前：&quot;);</span><br><span class=\"line\">\tfor(i = 0; i &lt; num; i++)&#123;</span><br><span class=\"line\">\t\tprintf(&quot;%d &quot;, a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tprintf(&quot;\\n&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t// 冒泡 </span><br><span class=\"line\">\tfor(i = 0; i &lt; num; i++)&#123;\t\t// 游标 </span><br><span class=\"line\">\t\tfor(j = i; j &lt; num - 1; j++)&#123;\t\t// 两两比较 </span><br><span class=\"line\">\t\t\tif(a[j] &gt; a[j + 1])&#123;</span><br><span class=\"line\">\t\t\t\ttemp = a[j + 1];</span><br><span class=\"line\">\t\t\t\ta[j + 1] = a[j];</span><br><span class=\"line\">\t\t\t\ta[j] = temp;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t// swap((a + j), (a + j + 1));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tprintf(&quot;排序后：&quot;);</span><br><span class=\"line\">\tfor(i = 0; i &lt; num; i++)&#123;</span><br><span class=\"line\">\t\tprintf(&quot;%d &quot;, a[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\treturn 1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/09/04/P1223_%E6%8E%92%E9%98%9F%E6%8E%A5%E6%B0%B4%E9%97%AE%E9%A2%98%E7%BB%AD%EF%BC%88C%EF%BC%89/",
            "url": "http://example.com/2021/09/04/P1223_%E6%8E%92%E9%98%9F%E6%8E%A5%E6%B0%B4%E9%97%AE%E9%A2%98%E7%BB%AD%EF%BC%88C%EF%BC%89/",
            "title": "P1223 排队接水问题续（C）",
            "date_published": "2021-09-04T10:32:00.000Z",
            "content_html": "<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\nconst MAX = 1500;\n\n//创建结构体 \nstruct P&#123;\n    int id;\n    int time;\n&#125;;\n\n//排序函数 \nint comp(const void *p1, const void *p2)\n&#123;\n    const struct P *ps1 = (struct P *)p1;\n    const struct P *ps2 = (struct P *)p2;\t\n    if(ps1-&gt;time != ps2-&gt;time)\n        return ps1-&gt;time - ps2-&gt;time;\n    else\n        return ps1-&gt;id - ps2-&gt;id;\n&#125;\n\nint main()\n&#123;\n    struct P p[MAX];\n    int count = 0;\t\t//声明总人数 \n    int i, j;\n    double sum = 0.0; \n    scanf(&quot;%d&quot;, &amp;count);\n    for(i = 0; i &lt; count; i++)\t\t//创建(id , time)散列表 \n    &#123;\n        p[i].id = (i + 1);\n        scanf(&quot;%d&quot;, &amp;p[i].time);\n    &#125;\n    qsort(p, count, sizeof(p[1]), comp);\t\t//快排 \n    for(j = 0; j &lt; count; j++)\t\t//贪心算法求和计算总等待时间 \n        sum += p[j].time * (count - j - 1); \n    for(j = 0; j &lt; count; j++)\t\t//输出最优顺序 \n    &#123;\n        printf(&quot;%d &quot;,p[j].id);\n    &#125;\n    printf(&quot;\\n&quot;);\n    printf(&quot;%.2lf\\n&quot;, sum / count);\t\t//输出平均等待时间 \n    return 0;\n&#125;\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL21pb2UueHl6L2luZGV4LnBocC9hcmNoaXZlcy80Mi8=\">Python解法</span></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/06/02/P1223_%E6%8E%92%E9%98%9F%E6%8E%A5%E6%B0%B4_python/",
            "url": "http://example.com/2021/06/02/P1223_%E6%8E%92%E9%98%9F%E6%8E%A5%E6%B0%B4_python/",
            "title": "P1223 排队接水 python",
            "date_published": "2021-06-02T13:10:00.000Z",
            "content_html": "<p><img data-src=\"https://i.loli.net/2021/06/02/kzh7MsgTyiPWaUK.png\" alt=\"P1223 排队接水\"></p>\n<pre><code>n = int(input())\nlist1 = list(map(int, input().split()))\nc = 1\nsum1 = 0\nlist2 = []\nfor i in range(n):\n    list2.append(&#123;&quot;id&quot;: i + 1, &quot;time&quot;: list1[i]&#125;)\nlist2.sort(key=lambda rank: rank[&quot;time&quot;])\nfor i in list2:\n    sum1 += i[&quot;time&quot;] * (n - c)\n    c += 1\nfor i in range(n):\n    if i == n - 1:\n        print(list2[i][&quot;id&quot;], end=&quot;&quot;)\n    else:\n        print(list2[i][&quot;id&quot;], end=&quot; &quot;)\nprint()\nprint(&quot;%.2f&quot; % (sum1/n))\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/06/01/%E5%9B%9E%E6%96%87%E8%B4%A8%E6%95%B0_python/",
            "url": "http://example.com/2021/06/01/%E5%9B%9E%E6%96%87%E8%B4%A8%E6%95%B0_python/",
            "title": "回文质数 python",
            "date_published": "2021-06-01T12:02:49.000Z",
            "content_html": "<p><img data-src=\"http://mioe.xyz/usr/uploads/2021/06/1304133883.png\" alt=\"6-01-2.png\"></p>\n<p>洛谷卡了很长时间，最终还是没有AC，最后两个超时，可能是我回文判断选择用字符串的方式导致的,最后没办法了，选择下策直接打表AC。</p>\n<p>注：</p>\n<ol>\n<li>除 11 外没有偶数位的回文质数，那么[10000000,100000000] 这个区间根本不用枚举。</li>\n<li>只需要[2, sqrt(i) + 1]</li>\n</ol>\n<p>代码如下：</p>\n<pre><code>import math\na, b = map(int, input().split())\nlist1 = []\nif b &gt; 10000000:\n    b = 10000000\nfor i in range(a, b + 1):\n    if str(i) == str(i)[::-1]:\n        for j in range(2, int(math.sqrt(i)) + 1):\n            if i % j == 0:\n                break\n        else:\n            print(i)\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/06/01/%E6%B4%9B%E8%B0%B7_P1106_%E5%88%A0%E6%95%B0%E9%97%AE%E9%A2%98_python%E8%A7%A3%E6%B3%95/",
            "url": "http://example.com/2021/06/01/%E6%B4%9B%E8%B0%B7_P1106_%E5%88%A0%E6%95%B0%E9%97%AE%E9%A2%98_python%E8%A7%A3%E6%B3%95/",
            "title": "洛谷 P1106 删数问题 python解法",
            "date_published": "2021-06-01T11:48:00.000Z",
            "content_html": "<p><img data-src=\"http://mioe.xyz/usr/uploads/2021/06/3479330492.png\" alt=\"6-01-1.png\"></p>\n<p>第一次提交时，因为读题不清，3个WA。一开始理解为依次删除最大数，例50074897 2得500747，结果一直WA，然后被迫下载测试数据，发现正确答案为 4897。</p>\n<p>思索了一番，发现是个贪心问题,还是用 50074897 2 举例:<br>        (1) 5 &gt; 0 , 删除5, 0074897<br>        (2) 0 &#x3D; 0 , 不动 0074897<br>        (3) 0 &#x3D; 0 , 同理 0074897<br>        (5) 7 &gt; 4 , 删除7，004897<br>        (6) 去零整理，答案为 4897<br>Python天下第一，代码如下：</p>\n<pre><code>m = input()\nn = int(input())\ni = 0   # 用于下标索引\nwhile quit:\n    # 边界默认和0比\n    if i + 1 == len(m):\n        m = m[:len(m) - 1]\n        n -= 1\n        i -= 1\n    # 判断是否单调递增\n    elif m[i] &lt;= m[i + 1]:\n        i += 1\n        continue\n    # 删除非递增项\n    else:\n        m = m.replace(m[i], &quot;&quot;, 1)\n        n -= 1\n        i -= 1\n    # 循环结束\n    if n == 0:\n        break\nprint(int(m))\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/05/31/%E8%B4%AA%E5%A9%AA%E7%AE%97%E6%B3%95%E4%B9%8B%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2021/05/31/%E8%B4%AA%E5%A9%AA%E7%AE%97%E6%B3%95%E4%B9%8B%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",
            "title": "贪婪算法之背包问题",
            "date_published": "2021-05-31T13:54:41.000Z",
            "content_html": "<p><img data-src=\"http://mioe.xyz/usr/uploads/2021/05/33685418.png\" alt=\"5-31.png\"></p>\n<pre><code>coins, capacity = map(int, input().split())\nemt = []\nsum_coin = 0.0\nfor i in range(coins):\n    temp_weight, temp_coin = map(int, input().split())\n    emt.append(&#123;&#39;coin&#39;: temp_coin, &#39;weight&#39;: temp_weight, &#39;avg&#39;: temp_coin/temp_weight&#125;)\nemt.sort(key=lambda emt_d: emt_d[&#39;avg&#39;], reverse=True)\nfor i in range(len(emt)):\n    if capacity &gt;= emt[i][&#39;weight&#39;]:\n        sum_coin += emt[i][&#39;coin&#39;]\n        capacity -= emt[i][&#39;weight&#39;]\n    elif capacity &lt; emt[i][&#39;weight&#39;] and capacity != 0:\n        sum_coin += emt[i][&#39;avg&#39;] * capacity\n        break\nprint(&#39;%.2f&#39; % sum_coin)\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/03/31/%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B(D&amp;C%EF%BC%89/",
            "url": "http://example.com/2021/03/31/%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B(D&amp;C%EF%BC%89/",
            "title": "分而治之(D&amp;C）",
            "date_published": "2021-03-31T10:15:00.000Z",
            "content_html": "<p><strong>分而治之（Ｄ＆Ｃ）</strong>能将问题逐步分解，但并非可用于解决问题的算法，而是一种解决问题的思路。</p>\n<p><strong>分而治之算法</strong>是递归的，使用分而治之(D&amp;C)解决问题的过程包括两个步骤：</p>\n<ol>\n<li>找出递归边界条件，这种条件必须尽可能简单</li>\n<li>不断地将问题分解（或者说缩小规模），直到符合递归边界条件。</li>\n</ol>\n<blockquote>\n<p><strong>注意</strong>：假设要将一块地均匀地分成方块，确保分出的方块最大的条件，应采取Ｄ＆Ｃ策略：适用于这小块地的最大方块，也是适用于整块地的最大方案。原因可参考欧几里得算法。</p>\n</blockquote>\n<hr>\n<p>给定一个数字数组　arr &#x3D; [2, 4, 6]，如何将这些数字相加</p>\n<ol>\n<li>找出递归边界条件：数组不包含任何元素或只包含一个元素</li>\n<li>每次递归调用都必须离空数组更近一步。</li>\n</ol>\n<p><strong>例如：</strong><br>    arr &#x3D; [2, 4, 6]<br>    sum(arr) &#x3D; 12</p>\n<pre><code>#等效于下面的语句\narr = [4, 6]\n2 + sum(arr) = 12\n\n#再等效下面的语句\narr = [6]\n2 + 6 + sum(arr) = 12\n\n#依次类推，逐渐缩小了问题的规模\n</code></pre>\n<blockquote>\n<p>注意：编写涉及数组的递归函数时，递归边界条件通常是数组为空或只包含一个元素。陷入困境时，请检查递归边界条件是不是这样的。</p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/03/31/%E9%80%92%E5%BD%92_-_%E6%95%B0%E7%BB%84%E7%B4%AF%E5%8A%A0/",
            "url": "http://example.com/2021/03/31/%E9%80%92%E5%BD%92_-_%E6%95%B0%E7%BB%84%E7%B4%AF%E5%8A%A0/",
            "title": "递归 - 数组累加",
            "date_published": "2021-03-31T10:01:00.000Z",
            "content_html": "<pre><code>def sum(a):\n    if a == []:\n        return 0    #基线条件\n    return a[0] + sum(a[1:])    #递归条件\n\nprint(sum(a))\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/03/28/%E8%BF%AD%E4%BB%A3_-_%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/",
            "url": "http://example.com/2021/03/28/%E8%BF%AD%E4%BB%A3_-_%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0/",
            "title": "迭代 - 水仙花数",
            "date_published": "2021-03-28T07:13:27.000Z",
            "content_html": "<p>偶然发现了一种用迭代算水仙花，太顶了：</p>\n<pre><code>for i in range(100, 1000):\n    sum = 0\n    temp = i\n    while temp:   #开始迭代\n        sum = sum + (temp%10) ** 3\n        temp //= 10\n    if sum == i:\n        print(i)\n</code></pre>\n<p>例如 153 这个数</p>\n<ol>\n<li>先取出个位数 152 % 10 &#x3D;&#x3D; 2 ，再对 temp 去除个位 (temp &#x2F;&#x2F;&#x3D; 10) ,这时 temp 等于 15</li>\n<li>while 为真，循环上一次操作，对 15 取各位 ，同理 temp 此时为 1</li>\n<li>对 1 求模 ，1 &#x2F;&#x2F; 10 为 0，跳出循环，至此 1,5,3 全部取出</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/03/28/%E7%88%B1%E5%9B%A0%E6%96%AF%E5%9D%A6%E7%9A%84%E9%98%B6%E6%A2%AF%E9%97%AE%E9%A2%98/",
            "url": "http://example.com/2021/03/28/%E7%88%B1%E5%9B%A0%E6%96%AF%E5%9D%A6%E7%9A%84%E9%98%B6%E6%A2%AF%E9%97%AE%E9%A2%98/",
            "title": "爱因斯坦的阶梯问题",
            "date_published": "2021-03-28T06:10:00.000Z",
            "content_html": "<h2 id=\"爱因斯坦的阶梯难题\"><a href=\"#爱因斯坦的阶梯难题\" class=\"headerlink\" title=\"爱因斯坦的阶梯难题\"></a>爱因斯坦的阶梯难题</h2><p>爱因斯坦曾出过这样一道有趣的数学题：有一个长阶梯，若每步上2阶，最后剩1阶；若每步上3阶，最后剩2阶；若每步上5阶，最后剩4阶；若每步上6阶，最后剩5阶；只有每步上7阶，最后刚好一阶也不剩。</p>\n<pre><code>i = 0\nwhile True:\n    if i % 2 == 1 and i % 3 == 2 and i % 5 == 4 and i % 6 == 5 and i % 7 == 0:\n        print(i)\n        break\n    else:\n        i += 1\n</code></pre>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/03/21/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "url": "http://example.com/2021/03/21/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",
            "title": "二分查找",
            "date_published": "2021-03-21T07:53:00.000Z",
            "content_html": "<pre><code>def binary(list, item):         #二分查找\n    low = 0\n    high = len(list)\n    while low &lt;= high:\n        mid = int((low + high) / 2)\n        if list[mid] == item:\n            return mid\n        if list[mid] &lt;= item:\n            low = mid + 1         #中值已经比较过，直接从下一值开始，提高效率\n        if list[mid] &gt;= item:\n            high = mid - 1         #同理\n \n \nlist1 = [1, 3, 5, 7, 9, 11, 15, 16]         #二分查找测试\nprint(binary(list1, 9))\n</code></pre>\n",
            "tags": []
        }
    ]
}